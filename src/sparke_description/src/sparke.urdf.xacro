<?xml version="1.0"?>
<robot name="sparke" xmlns:xacro="http://ros.org/wiki/xacro">
	<!-- Constants -->
  <xacro:property name="base_length" value="0.254"/>
	<xacro:property name="base_width" value="0.11"/>
  <xacro:property name="base_height" value="0.065"/>

  <xacro:property name="shoulder_length" value="0.034"/>
	<xacro:property name="shoulder_width" value="0.0635"/>
  <xacro:property name="shoulder_height" value="0.013"/>

  <xacro:property name="leg_length" value="0.125"/>
	<xacro:property name="leg_width" value="0.040"/>
  <xacro:property name="leg_height" value="0.027"/>
  
  <xacro:property name="elbow_radius" value="0.0135"/>
	<xacro:property name="elbow_width" value="0.040"/>

  <xacro:property name="wrist_length" value="0.135"/>
	<xacro:property name="wrist_width" value="0.0325"/>
  <xacro:property name="wrist_height" value="0.015"/>

  <xacro:property name="foot_radius" value="0.015"/>
	<xacro:property name="foot_width" value="0.0325"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>


	<!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Body">
        <color rgba="0 0.5 0.5 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <gazebo>
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>

	<!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  </joint>

  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </visual>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${(base_height/2)+(0.055/2)}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Stereo Camera -->
  <link name="stereo_camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.06 0.02"/>
      </geometry>
      <material name="camera_base">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="0.01 0.06 0.02"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.01" w="0" d="0" h="0"/>
  </link>

  <joint name="stereo_camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="stereo_camera_link"/>
    <origin xyz="${base_length/2} 0 0" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Camera -->
  <link name="r_camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.005" length="0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.005" length="0.01"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="r_camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.01 -0.02 0" rpy="0 ${pi/2} 0"/>
    <parent link="stereo_camera_link"/>
    <child link="r_camera_link"/>
  </joint>

  <link name="l_camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.005" length="0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.005" length="0.01"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="l_camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.01 0.02 0" rpy="0 ${pi/2} 0"/>
    <parent link="stereo_camera_link"/>
    <child link="l_camera_link"/>
  </joint>

  <gazebo reference="r_camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="r_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sparke/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="l_camera_link">
    <sensor type="camera" name="camera2">
      <update_rate>30.0</update_rate>
      <camera name="l_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sparke/camera2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Shoulders -->
  <xacro:macro name="shoulder" params="prefix x_reflect y_reflect x_pos y_pos z_pos">
    <link name="${prefix}_shoulder_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="${shoulder_length} ${shoulder_width} ${shoulder_height}"/>
        </geometry>
        <material name="Shoulder">
          <color rgba="0 0.6 0.6 1.0"/>
        </material>
      </visual>

      <collision>
        <geometry>
          <box size="${shoulder_length} ${shoulder_width} ${shoulder_height}"/>
        </geometry>
      </collision>

      <xacro:box_inertia m="0.1" w="${shoulder_length}" d="${shoulder_width}" h="${shoulder_height}"/>

    </link>

    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_shoulder_link"/>
      <origin xyz="${(x_pos - (shoulder_length/25)) * x_reflect} ${(y_pos + (shoulder_width/2)) * y_reflect} ${z_pos - (shoulder_height/2)}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Legs -->
  <xacro:macro name="leg" params="prefix x_reflect y_reflect x_pos y_pos z_pos">
    <link name="${prefix}_leg_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="${leg_length} ${leg_width} ${leg_height}"/>
        </geometry>
        <material name="Body">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>

      <collision>
        <geometry>
          <box size="${leg_length} ${leg_width} ${leg_height}"/>
        </geometry>
      </collision>

      <xacro:box_inertia m="0.5" w="${leg_length}" d="${leg_width}" h="${leg_height}"/>
      
    </link>

    <joint name="${prefix}_leg_joint" type="fixed">
      <parent link="${prefix}_shoulder_link"/>
      <child link="${prefix}_leg_link"/>
      <origin xyz="${(x_pos - (leg_length/25)) * x_reflect} ${(y_pos + (leg_width/2)) * y_reflect} ${z_pos - (leg_height/2)}" rpy="0 ${-pi/4} 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <link name="${prefix}_elbow_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
        <geometry>
            <cylinder radius="${elbow_radius}" length="${elbow_width}"/>
        </geometry>
        <material name="Body">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>

      <collision>
        <geometry>
          <cylinder radius="${elbow_radius}" length="${elbow_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.1" r="${elbow_radius}" h="${elbow_width}"/>

    </link>

    <joint name="${prefix}_elbow_joint" type="fixed">
      <parent link="${prefix}_leg_link"/>
      <child link="${prefix}_elbow_link"/>
      <origin xyz="${-leg_length/2} 0 0" rpy="0 0 ${pi/2}"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Wrists -->
  <xacro:macro name="wrist" params="prefix x_reflect y_reflect x_pos y_pos z_pos">
    <link name="${prefix}_wrist_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <box size="${wrist_length} ${wrist_width} ${wrist_height}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>

      <collision>
        <geometry>
          <box size="${wrist_length} ${wrist_width} ${wrist_height}"/>
        </geometry>
      </collision>

      <xacro:box_inertia m="0.4" w="${wrist_length}" d="${wrist_width}" h="${wrist_height}"/>
    </link>

    <joint name="${prefix}_wrist_joint" type="fixed">
      <parent link="${prefix}_elbow_link"/>
      <child link="${prefix}_wrist_link"/>
      <origin xyz="0 0 ${-wrist_length/2}" rpy="0 ${pi/2} ${pi/2}"/>
      <axis xyz="0 1 0"/>
    </joint>

    <link name="${prefix}_foot_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="${foot_radius}" length="${foot_width+0.001}"/>
        </geometry>
        <material name="black">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
      </visual>

      <collision>
        <geometry>
          <cylinder radius="${foot_radius}" length="${foot_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.1" r="${foot_radius}" h="${foot_width}"/>
    </link>

    <joint name="${prefix}_foot_joint" type="fixed">
      <parent link="${prefix}_wrist_link"/>
      <child link="${prefix}_foot_link"/>
      <origin xyz="${wrist_length/2} 0 0" rpy="0 ${pi/2} ${pi/2}"/>
      <axis xyz="0 1 0"/>
    </joint>    

    <gazebo reference="${prefix}_foot_link">
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>
  </xacro:macro>

  <xacro:shoulder prefix="fl" x_reflect="1" y_reflect="1" x_pos="0.101" y_pos="${base_width/2}" z_pos="${base_height/2}"/>
  <xacro:shoulder prefix="fr" x_reflect="1" y_reflect="-1" x_pos="0.101" y_pos="${base_width/2}" z_pos="${base_height/2}"/>
  <xacro:shoulder prefix="br" x_reflect="-1" y_reflect="-1" x_pos="0.101" y_pos="${base_width/2}" z_pos="${base_height/2}"/>
  <xacro:shoulder prefix="bl" x_reflect="-1" y_reflect="1" x_pos="0.101" y_pos="${base_width/2}" z_pos="${base_height/2}"/>

  <xacro:leg prefix="fl" x_reflect="1" y_reflect="1" x_pos="${-(leg_length/2)+(shoulder_length*0.9)}" y_pos="${-leg_width/2}" z_pos="${-(leg_length/4)-(shoulder_height/4)}"/>
  <xacro:leg prefix="fr" x_reflect="1" y_reflect="1" x_pos="${-(leg_length/2)+(shoulder_length*0.9)}" y_pos="${-leg_width/2}" z_pos="${-(leg_length/4)-(shoulder_height/4)}"/>
  <xacro:leg prefix="br" x_reflect="1" y_reflect="1" x_pos="${-(leg_length/2)+(shoulder_length*0.9)}" y_pos="${-leg_width/2}" z_pos="${-(leg_length/4)-(shoulder_height/4)}"/>
  <xacro:leg prefix="bl" x_reflect="1" y_reflect="1" x_pos="${-(leg_length/2)+(shoulder_length*0.9)}" y_pos="${-leg_width/2}" z_pos="${-(leg_length/4)-(shoulder_height/4)}"/>

  <xacro:wrist prefix="fl" x_reflect="1" y_reflect="1" x_pos="0" y_pos="0" z_pos="0"/>
  <xacro:wrist prefix="fr" x_reflect="1" y_reflect="1" x_pos="0" y_pos="0" z_pos="0"/>
  <xacro:wrist prefix="br" x_reflect="1" y_reflect="1" x_pos="0" y_pos="0" z_pos="0"/>
  <xacro:wrist prefix="bl" x_reflect="1" y_reflect="1" x_pos="0" y_pos="0" z_pos="0"/>

</robot>
